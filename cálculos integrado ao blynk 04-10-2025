
#define BLYNK_PRINT Serial


#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

char ssid[] = "Sakaninha wifi";
char pass[] = "sgzq3535";

#define pinLeituracorrente 34
float resistencia = 500.00;
float corrente;
float correntemAmper;
float tensao = 5.00;
float potencia;
int eficiencia;
float potenciamW;
float potenciaPico = 1.25;
int resistorShunt = 110;

BlynkTimer timer; // Creating a timer object

BLYNK_WRITE(V0)
{
  // Set incoming value from pin V0 to a variable
  int value = param.asInt();

  // Update state
  Blynk.virtualWrite(V1, value);
}

BLYNK_CONNECTED()
{
  // Change Web Link Button message to "Congratulations!"
  Blynk.setProperty(V3, "offImageUrl", "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations.png");
  Blynk.setProperty(V3, "onImageUrl",  "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations_pressed.png");
  Blynk.setProperty(V3, "url", "https://docs.blynk.io/en/getting-started/template-quick-setup");
}

// This function sends Arduino's uptime every second to Virtual Pin 2.
void myTimerEvent()
{
  // You can send any value at any time.
  // Please don't send more that 10 values per second.
  Blynk.virtualWrite(V2, millis() / 1000);
}

void enviandoDadosDeGeracao()
{
  Blynk.virtualWrite(V1, tensao);
  Blynk.virtualWrite(V5, tensao);
  Blynk.virtualWrite(V2, correntemAmper);
  Blynk.virtualWrite(V9, correntemAmper);
}

void setup()
{
  Serial.begin(115200);
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);

  // Setup a timer function to be called every second
  timer.setInterval(1000L, myTimerEvent);
}

void loop()
{
  Blynk.run();
  timer.run();
  calculoCorrenteTensaoPotencia();
  // You can inject your own code or combine it with other sketches.
  // Check other examples on how to communicate with Blynk. Remember
  // to avoid delay() function!
}

void calculoCorrenteTensaoPotencia(){
  float leituraCorrente = analogRead(pinLeituracorrente);
  //Serial.println(leitura, 10);

  float leituraCorrenteAjustada = (leituraCorrente * 3.3) / 4095.0;
  
  corrente = leituraCorrenteAjustada / resistorShunt;
  correntemAmper = corrente * 1000;

  potencia = tensao * corrente;
  potenciamW = potencia * 1000;

  eficiencia = (potencia/potenciaPico) * 100;

  Serial.print("Corrente = ");
  Serial.print(correntemAmper, 4);
  Serial.print(" mA :");
  Serial.print(" Tensão = ");
  Serial.print(tensao, 4);
  Serial.print(" V :");
  Serial.print(" Potência = ");
  Serial.print(potenciamW, 4);
  Serial.print(" mW :");
  Serial.print(" Eficiência = ");
  Serial.print(eficiencia);
  Serial.println(" %");
  delay(500);
}
